//Simple Duplicate Special
//by Allena Hail
//www.allenahail.com

string $dsWin;

if (`window -exists $dsWin`){
    deleteUI $dsWin;
}

string $dsWin = `window -t "Duplicate Special" -widthHeight 400 300 -s false`;

columnLayout -adjustableColumn true;
frameLayout - label "Pivot" -collapsable false;
    gridLayout -numberOfColumns 3 -cellWidthHeight 133 50;
    button -label "Center" -command CenterPivot;
    button -label "World Zero" -command "xform -ws -a -rp 0 0 0 -sp 0 0 0;";
    button -label "Freeze" -command FreezeTransformations;
    setParent..;
frameLayout - label "Mirror" -collapsable false;
    gridLayout -numberOfColumns 3 -cellWidthHeight 133 50;
    button -label "mirror across X" -command "duplicate -rr; scale -r -1 1 1";
    button -label "mirror across Y" -command "duplicate -rr; scale -r 1 -1 1";
    button -label "mirror across Z" -command "duplicate -rr; scale -r 1 1 -1";
    setParent..;
frameLayout - label "Around" -collapsable false;
    columnLayout -adjustableColumn true;
        radioButtonGrp 
          -numberOfRadioButtons 3
          -label "Axis" 
          -labelArray3 "X" "Y" "Z"
          -select 1
          MyRadioCollection;
        $sliderDegree = `floatSliderGrp -label "Degree" -field true -minValue 0.0 -maxValue 360.0 -value 0 -w 100`;
        $sliderNumber = `intSliderGrp -label "Number" -field true -minValue 1 -maxValue 1000 -value 1 -w 100`;        
    setParent..;
setParent..;
    button -label "Duplicate Around" -h 50 -command dupAround;  
showWindow $dsWin;

global proc dupAround(){
    string $sliderDegree;
    string $sliderNumber;
    float $vD = `floatSliderGrp -query -value $sliderDegree`;
    int $vN = `intSliderGrp -query -value $sliderNumber`;
    $i = 0;
    for ($i=0; $i<$vN; ++$i){
    if (`radioButtonGrp -q -select MyRadioCollection` == 1){
        duplicate -rr; rotate -r $vD 0 0;
    } 
    if (`radioButtonGrp -q -select MyRadioCollection` == 2){
        duplicate -rr; rotate -r 0 $vD 0;
    } 
    if (`radioButtonGrp -q -select MyRadioCollection` == 3){
        duplicate -rr; rotate -r 0 0 $vD;
    }
    }
}

